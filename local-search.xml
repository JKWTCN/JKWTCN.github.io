<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>化繁为简</title>
    <link href="/2025/07/28/%E5%8C%96%E7%B9%81%E4%B8%BA%E7%AE%80/"/>
    <url>/2025/07/28/%E5%8C%96%E7%B9%81%E4%B8%BA%E7%AE%80/</url>
    
    <content type="html"><![CDATA[<p>在开发图片拼接软件—-拼好图的过程中,遇到了移动逻辑画了张图,由于我选择了图动,所有总共有16种移动情况.分布是上移-最上,上移-中间上拼接线,上移……</p><p><img src="/image/%E5%8C%96%E7%B9%81%E4%B8%BA%E7%AE%80/1753633660685.png" alt="拼好图的移动逻辑">但是在开发完后,测试没问题后,忽然发现也可以用这个实现图片拼接功能,就首尾也添加了根拼接线,然后就发现,16种情况被简化成了8种,一下子砍掉了一半.真正的事半功倍.</p>]]></content>
    
    
    
    <tags>
      
      <tag>拼好图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>b站视频生成预览图</title>
    <link href="/2025/07/27/b%E7%AB%99%E8%A7%86%E9%A2%91%E7%94%9F%E6%88%90%E9%A2%84%E8%A7%88%E5%9B%BE/"/>
    <url>/2025/07/27/b%E7%AB%99%E8%A7%86%E9%A2%91%E7%94%9F%E6%88%90%E9%A2%84%E8%A7%88%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<p>昨天在群里看到一个BOT有个有趣的功能,就是和可以根据B站视频链接生成预览图,觉得挺有意思的,就打算把这个功能COPY过来,一共用了三种思路实现,在这里分享一下子.</p><h2 id="下载到本地解析"><a href="#下载到本地解析" class="headerlink" title="下载到本地解析"></a>下载到本地解析</h2><p>这种方法是最笨的,但是是最有效的,我最初使用的是you-get下载和opencv解析的,但是因为我的开发机是R7 8845H,服务器是R7 5850U,R7 5850U是不支持硬解AV1的,所以用opencv解析会报错,获取不到Moov,最后换成了FFmpeg,demo代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> urlparse<br><span class="hljs-keyword">import</span> uuid<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">extract_frames</span>(<span class="hljs-params">input_video, output_folder, num_frames=<span class="hljs-number">16</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;使用FFmpeg从视频中均匀提取指定数量的帧&quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 创建输出文件夹</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(output_folder):<br>        os.makedirs(output_folder)<br><br>    <span class="hljs-comment"># 获取视频时长</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 使用FFprobe获取视频时长</span><br>        probe_cmd = [<br>            <span class="hljs-string">&quot;ffprobe&quot;</span>,<br>            <span class="hljs-string">&quot;-v&quot;</span>,<br>            <span class="hljs-string">&quot;quiet&quot;</span>,<br>            <span class="hljs-string">&quot;-select_streams&quot;</span>,<br>            <span class="hljs-string">&quot;v:0&quot;</span>,<br>            <span class="hljs-string">&quot;-show_entries&quot;</span>,<br>            <span class="hljs-string">&quot;format=duration&quot;</span>,<br>            <span class="hljs-string">&quot;-of&quot;</span>,<br>            <span class="hljs-string">&quot;csv=p=0&quot;</span>,<br>            input_video,<br>        ]<br>        result = subprocess.run(probe_cmd, capture_output=<span class="hljs-literal">True</span>, text=<span class="hljs-literal">True</span>)<br>        <span class="hljs-keyword">if</span> result.returncode == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> result.stdout.strip():<br>            duration = <span class="hljs-built_in">float</span>(result.stdout.strip())<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;视频时长: <span class="hljs-subst">&#123;duration:<span class="hljs-number">.2</span>f&#125;</span>秒&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># 备用方案：使用stream信息获取时长</span><br>            probe_cmd2 = [<br>                <span class="hljs-string">&quot;ffprobe&quot;</span>,<br>                <span class="hljs-string">&quot;-v&quot;</span>,<br>                <span class="hljs-string">&quot;quiet&quot;</span>,<br>                <span class="hljs-string">&quot;-select_streams&quot;</span>,<br>                <span class="hljs-string">&quot;v:0&quot;</span>,<br>                <span class="hljs-string">&quot;-show_entries&quot;</span>,<br>                <span class="hljs-string">&quot;stream=duration&quot;</span>,<br>                <span class="hljs-string">&quot;-of&quot;</span>,<br>                <span class="hljs-string">&quot;csv=p=0&quot;</span>,<br>                input_video,<br>            ]<br>            result2 = subprocess.run(probe_cmd2, capture_output=<span class="hljs-literal">True</span>, text=<span class="hljs-literal">True</span>)<br>            <span class="hljs-keyword">if</span> (<br>                result2.returncode == <span class="hljs-number">0</span><br>                <span class="hljs-keyword">and</span> result2.stdout.strip()<br>                <span class="hljs-keyword">and</span> result2.stdout.strip() != <span class="hljs-string">&quot;N/A&quot;</span><br>            ):<br>                duration = <span class="hljs-built_in">float</span>(result2.stdout.strip())<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;视频时长: <span class="hljs-subst">&#123;duration:<span class="hljs-number">.2</span>f&#125;</span>秒&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;无法获取视频时长，使用默认间隔提取&quot;</span>)<br>                duration = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;获取视频时长失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        duration = <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">if</span> duration:<br>        <span class="hljs-comment"># 根据视频时长均匀分布提取帧的时间点</span><br>        <span class="hljs-comment"># 在视频的5%到95%之间均匀分布，避免开头结尾的黑屏</span><br>        start_time = duration * <span class="hljs-number">0.05</span><br>        end_time = duration * <span class="hljs-number">0.95</span><br>        time_span = end_time - start_time<br><br>        <span class="hljs-comment"># 生成均匀分布的时间点</span><br>        time_points = []<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_frames):<br>            <span class="hljs-keyword">if</span> num_frames == <span class="hljs-number">1</span>:<br>                time_point = duration / <span class="hljs-number">2</span>  <span class="hljs-comment"># 如果只要1帧，取中间</span><br>            <span class="hljs-keyword">else</span>:<br>                time_point = start_time + (time_span * i / (num_frames - <span class="hljs-number">1</span>))<br>            time_points.append(time_point)<br><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;在以下时间点提取帧: <span class="hljs-subst">&#123;[<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;t:<span class="hljs-number">.2</span>f&#125;</span>s&#x27;</span> <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> time_points]&#125;</span>&quot;</span>)<br><br>        <span class="hljs-comment"># 使用FFmpeg按时间点提取帧</span><br>        <span class="hljs-keyword">for</span> i, time_point <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(time_points):<br>            cmd = [<br>                <span class="hljs-string">&quot;ffmpeg&quot;</span>,<br>                <span class="hljs-string">&quot;-y&quot;</span>,  <span class="hljs-comment"># 覆盖输出文件</span><br>                <span class="hljs-string">&quot;-ss&quot;</span>,<br>                <span class="hljs-built_in">str</span>(time_point),  <span class="hljs-comment"># 跳转到指定时间</span><br>                <span class="hljs-string">&quot;-i&quot;</span>,<br>                input_video,<br>                <span class="hljs-string">&quot;-vframes&quot;</span>,<br>                <span class="hljs-string">&quot;1&quot;</span>,  <span class="hljs-comment"># 只提取一帧</span><br>                <span class="hljs-string">&quot;-vf&quot;</span>,<br>                <span class="hljs-string">&quot;scale=-1:720&quot;</span>,  <span class="hljs-comment"># 缩放高度为720保持宽高比</span><br>                <span class="hljs-string">&quot;-q:v&quot;</span>,<br>                <span class="hljs-string">&quot;2&quot;</span>,  <span class="hljs-comment"># 高质量</span><br>                <span class="hljs-string">&quot;-f&quot;</span>,<br>                <span class="hljs-string">&quot;image2&quot;</span>,<br>                os.path.join(output_folder, <span class="hljs-string">f&quot;frame_<span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>:03d&#125;</span>.jpg&quot;</span>),<br>            ]<br><br>            result = subprocess.run(cmd, capture_output=<span class="hljs-literal">True</span>, text=<span class="hljs-literal">True</span>)<br>            <span class="hljs-keyword">if</span> result.returncode != <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;提取第<span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>&#125;</span>帧时出错: <span class="hljs-subst">&#123;result.stderr&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;已提取第<span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>&#125;</span>/<span class="hljs-subst">&#123;num_frames&#125;</span>帧&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># 备用方案：使用帧号间隔提取</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;使用备用方案：按帧号间隔提取&quot;</span>)<br>        cmd = [<br>            <span class="hljs-string">&quot;ffmpeg&quot;</span>,<br>            <span class="hljs-string">&quot;-y&quot;</span>,<br>            <span class="hljs-string">&quot;-i&quot;</span>,<br>            input_video,<br>            <span class="hljs-string">&quot;-vf&quot;</span>,<br>            <span class="hljs-string">f&quot;select=&#x27;not(mod(n\\,<span class="hljs-subst">&#123;<span class="hljs-built_in">max</span>(<span class="hljs-number">1</span>, <span class="hljs-number">30</span>)&#125;</span>))&#x27;,scale=-1:720&quot;</span>,  <span class="hljs-comment"># 每30帧取一帧</span><br>            <span class="hljs-string">&quot;-vframes&quot;</span>,<br>            <span class="hljs-built_in">str</span>(num_frames),<br>            <span class="hljs-string">&quot;-vsync&quot;</span>,<br>            <span class="hljs-string">&quot;vfr&quot;</span>,<br>            <span class="hljs-string">&quot;-q:v&quot;</span>,<br>            <span class="hljs-string">&quot;2&quot;</span>,<br>            <span class="hljs-string">&quot;-f&quot;</span>,<br>            <span class="hljs-string">&quot;image2&quot;</span>,<br>            os.path.join(output_folder, <span class="hljs-string">&quot;frame_%03d.jpg&quot;</span>),<br>        ]<br><br>        result = subprocess.run(cmd, capture_output=<span class="hljs-literal">True</span>, text=<span class="hljs-literal">True</span>)<br>        <span class="hljs-keyword">if</span> result.returncode != <span class="hljs-number">0</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;FFmpeg错误: <span class="hljs-subst">&#123;result.stderr&#125;</span>&quot;</span>)<br>            <span class="hljs-comment"># 最简单的备用方案</span><br>            simple_cmd = [<br>                <span class="hljs-string">&quot;ffmpeg&quot;</span>,<br>                <span class="hljs-string">&quot;-y&quot;</span>,<br>                <span class="hljs-string">&quot;-i&quot;</span>,<br>                input_video,<br>                <span class="hljs-string">&quot;-vframes&quot;</span>,<br>                <span class="hljs-built_in">str</span>(num_frames),<br>                <span class="hljs-string">&quot;-q:v&quot;</span>,<br>                <span class="hljs-string">&quot;2&quot;</span>,<br>                os.path.join(output_folder, <span class="hljs-string">&quot;frame_%03d.jpg&quot;</span>),<br>            ]<br>            subprocess.run(simple_cmd, capture_output=<span class="hljs-literal">True</span>, text=<span class="hljs-literal">True</span>)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;帧提取完成&quot;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create_collage</span>(<span class="hljs-params">input_folder, output_path, grid_size=(<span class="hljs-params"><span class="hljs-number">4</span>, <span class="hljs-number">4</span></span>)</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;将提取的帧拼接成网格&quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 获取所有提取的帧</span><br>    frame_files = <span class="hljs-built_in">sorted</span>(<br>        [f <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(input_folder) <span class="hljs-keyword">if</span> f.startswith(<span class="hljs-string">&quot;frame_&quot;</span>)]<br>    )<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> frame_files:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;错误：没有找到提取的帧文件&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>    frame_files = frame_files[: grid_size[<span class="hljs-number">0</span>] * grid_size[<span class="hljs-number">1</span>]]  <span class="hljs-comment"># 确保不超过16张</span><br><br>    <span class="hljs-comment"># 读取第一帧获取尺寸</span><br>    first_frame = cv2.imread(os.path.join(input_folder, frame_files[<span class="hljs-number">0</span>]))<br>    <span class="hljs-keyword">if</span> first_frame <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;错误：无法读取第一帧 <span class="hljs-subst">&#123;frame_files[<span class="hljs-number">0</span>]&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>    h, w = first_frame.shape[:<span class="hljs-number">2</span>]<br><br>    <span class="hljs-comment"># 创建空白画布</span><br>    collage = np.zeros((h * grid_size[<span class="hljs-number">0</span>], w * grid_size[<span class="hljs-number">1</span>], <span class="hljs-number">3</span>), dtype=np.uint8)<br><br>    <span class="hljs-comment"># 将帧拼接到画布上</span><br>    <span class="hljs-keyword">for</span> i, frame_file <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(frame_files):<br>        row = i // grid_size[<span class="hljs-number">1</span>]<br>        col = i % grid_size[<span class="hljs-number">1</span>]<br>        frame = cv2.imread(os.path.join(input_folder, frame_file))<br>        <span class="hljs-keyword">if</span> frame <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            collage[row * h : (row + <span class="hljs-number">1</span>) * h, col * w : (col + <span class="hljs-number">1</span>) * w] = frame  <span class="hljs-comment"># type: ignore</span><br><br>    <span class="hljs-comment"># 保存拼接图</span><br>    success = cv2.imwrite(output_path, collage)<br>    <span class="hljs-keyword">if</span> success:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;拼接图保存到 <span class="hljs-subst">&#123;output_path&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;错误：无法保存拼接图到 <span class="hljs-subst">&#123;output_path&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download_bilibili_video</span>(<span class="hljs-params"></span><br><span class="hljs-params">    url,</span><br><span class="hljs-params">    max_duration_min=<span class="hljs-number">30</span>,</span><br><span class="hljs-params">    cookie_file=<span class="hljs-literal">None</span>,</span><br><span class="hljs-params">    preferred_quality=<span class="hljs-number">1080</span>,</span><br><span class="hljs-params">    save_path=<span class="hljs-string">&quot;downloads&quot;</span>,</span><br><span class="hljs-params"></span>):<br><br>    os.system(<span class="hljs-string">f&quot;you-get <span class="hljs-subst">&#123;url&#125;</span> -o <span class="hljs-subst">&#123;save_path&#125;</span>&quot;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_path_video</span>(<span class="hljs-params">save_path</span>):<br>    video_files = [<br>        f <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(save_path) <span class="hljs-keyword">if</span> f.endswith((<span class="hljs-string">&quot;.mp4&quot;</span>, <span class="hljs-string">&quot;.mkv&quot;</span>, <span class="hljs-string">&quot;.avi&quot;</span>))<br>    ]<br>    <span class="hljs-keyword">return</span> os.path.join(save_path, video_files[<span class="hljs-number">0</span>]) <span class="hljs-keyword">if</span> video_files <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    uuid_str = <span class="hljs-built_in">str</span>(uuid.uuid4())<br>    save_path = <span class="hljs-string">f&quot;downloads/<span class="hljs-subst">&#123;uuid_str&#125;</span>&quot;</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始下载视频...&quot;</span>)<br>    download_bilibili_video(<br>        url=<span class="hljs-string">&quot;https://www.bilibili.com/video/BV1ox4y1q7bP&quot;</span>,<br>        max_duration_min=<span class="hljs-number">30</span>,<br>        cookie_file=<span class="hljs-string">&quot;cookie.txt&quot;</span>,<br>        preferred_quality=<span class="hljs-number">1080</span>,<br>        save_path=save_path,<br>    )<br><br>    input_video = get_path_video(save_path)<br>    <span class="hljs-keyword">if</span> input_video <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;错误：未找到下载的视频文件&quot;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;找到视频文件：<span class="hljs-subst">&#123;input_video&#125;</span>&quot;</span>)<br><br>    output_folder = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;save_path&#125;</span>/output&quot;</span><br>    output_collage = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;save_path&#125;</span>/collage.jpg&quot;</span><br><br>    <span class="hljs-comment"># 提取帧</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始提取视频帧...&quot;</span>)<br>    extract_frames(input_video, output_folder)<br><br>    <span class="hljs-comment"># 检查是否成功提取了帧</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(output_folder) <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> os.listdir(output_folder):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;错误：没有成功提取到视频帧&quot;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-comment"># 创建拼图</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始创建拼接图...&quot;</span>)<br>    success = create_collage(output_folder, output_collage)<br><br>    <span class="hljs-keyword">if</span> success:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;处理完成！拼接图保存在：<span class="hljs-subst">&#123;output_collage&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;创建拼接图失败&quot;</span>)<br><br>    <span class="hljs-comment"># 清理临时文件</span><br>    <span class="hljs-comment"># import shutil</span><br><br>    <span class="hljs-comment"># shutil.rmtree(save_path)</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br><br></code></pre></td></tr></table></figure><p>这种方法的好处是,简单,非常简单.但是坏处是,要下载,会吃带宽和时间敏感.</p><p><img src="/image/b%E7%AB%99%E8%A7%86%E9%A2%91%E7%94%9F%E6%88%90%E9%A2%84%E8%A7%88%E5%9B%BE/1753546464551.jpg" alt="章鱼噼的原罪第4集的预览图"></p><h2 id="通过HTTP范围请求参数请求解析m4s帧"><a href="#通过HTTP范围请求参数请求解析m4s帧" class="headerlink" title="通过HTTP范围请求参数请求解析m4s帧"></a>通过HTTP范围请求参数请求解析m4s帧</h2><p>这种方式就类似于我们拉动进度条跳转一样,直接解析相应的m4s帧.好处是直观,坏处是由于b站要求头和头带refer跟踪,所以不能用FFmpeg和OPENCV简单处理流,得自己写帧解析,帧解析的代码会择日写一篇文章贴出和分享过程.</p><p>由于要获取视频流,这个有两种方式,一种方式是硬html和js解析,另外一种方式是通过B站的API解析,这里是使用B站的API解析的,API文档参考:<a href="https://github.com/SocialSisterYi/bilibili-API-collect">SocialSisterYi&#x2F;bilibili-API-collect: 哔哩哔哩-API收集整理【不断更新中….】</a></p><h3 id="B站登录"><a href="#B站登录" class="headerlink" title="B站登录"></a>B站登录</h3><p>首先是登录和保存cookie,并且提供获取cookie的方法,这里采用的是扫码登录:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#bilibili_cookie.py</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> platform<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">from</span> qrcode <span class="hljs-keyword">import</span> QRCode<br><br>headers = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&quot;</span><br>&#125;<br><br><br><span class="hljs-comment"># 登录流程</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">SignIn</span>():<br>    token, url = GetSignInQR()<br>    CreateQR(url)  <span class="hljs-comment"># 等待客户端扫码</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        status, cookie = QRSign(token)<br>        <span class="hljs-keyword">match</span> status:<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">86101</span>:<br>                <span class="hljs-keyword">continue</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">86038</span>:<br>                ClearTerminal()<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二维码失效或超时,重新生成二维码&quot;</span>)<br>                token, url = GetSignInQR()<br>                status, cookie = QRSign(token)<br>                <span class="hljs-keyword">continue</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">86090</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;扫码成功,请点击确认&quot;</span>)<br>                <span class="hljs-keyword">continue</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                ClearTerminal()<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;登录成功&quot;</span>)<br>                SaveCookie(cookie)<br>                <span class="hljs-comment"># SSO登录页面跳转()</span><br>                <span class="hljs-keyword">break</span><br>        time.sleep(<span class="hljs-number">1</span>)<br><br><br><span class="hljs-comment"># 申请二维码</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">GetSignInQR</span>() -&gt; <span class="hljs-built_in">tuple</span>[<span class="hljs-built_in">str</span>, <span class="hljs-built_in">str</span>]:<br>    url = <span class="hljs-string">&quot;https://passport.bilibili.com/x/passport-login/web/qrcode/generate&quot;</span><br>    r = requests.get(url, headers=headers)<br>    <span class="hljs-built_in">print</span>(r.text)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;qrcode.json&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(r.text)<br>    data = json.loads(r.text)<br>    <span class="hljs-keyword">return</span> data[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;qrcode_key&quot;</span>], data[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;url&quot;</span>]<br><br><br><span class="hljs-comment"># 生成二维码</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">CreateQR</span>(<span class="hljs-params">url: <span class="hljs-built_in">str</span></span>):<br>    qr = QRCode()<br>    <span class="hljs-comment"># 设置二维码的数据</span><br>    qr.add_data(url)<br>    <span class="hljs-comment"># 生成二维码图片</span><br>    img = qr.make_image()<br>    ClearTerminal()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请扫描登录&quot;</span>)<br>    qr.print_ascii(invert=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-comment"># 扫码登录</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">QRSign</span>(<span class="hljs-params">token: <span class="hljs-built_in">str</span></span>):<br>    url = <span class="hljs-string">&quot;https://passport.bilibili.com/x/passport-login/web/qrcode/poll&quot;</span><br>    params = &#123;<span class="hljs-string">&quot;qrcode_key&quot;</span>: token&#125;<br>    r = requests.get(url, headers=headers, params=params)<br>    <span class="hljs-comment"># print(r.text)</span><br>    <span class="hljs-keyword">return</span> json.loads(r.text)[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;code&quot;</span>], r.cookies<br><br><br><span class="hljs-comment"># 读取cookies</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">LoadCookie</span>():<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;cookie.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        cookies = json.load(f)<br>    <span class="hljs-keyword">return</span> requests.utils.cookiejar_from_dict(cookies)<br><br><br><span class="hljs-comment"># 存储cookies</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">SaveCookie</span>(<span class="hljs-params">cookies</span>):<br>    cookies = requests.utils.dict_from_cookiejar(cookies)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;cookie.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(json.dumps(cookies))<br><br><br><span class="hljs-comment"># 清除终端</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ClearTerminal</span>():<br>    system = platform.system()<br>    <span class="hljs-keyword">if</span> system == <span class="hljs-string">&quot;Windows&quot;</span>:<br>        os.system(<span class="hljs-string">&quot;cls&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        os.system(<span class="hljs-string">&quot;clear&quot;</span>)<br><br></code></pre></td></tr></table></figure><h3 id="获取视频信息"><a href="#获取视频信息" class="headerlink" title="获取视频信息"></a>获取视频信息</h3><p>获取视频流是通过 <a href="https://api.bilibili.com/x/player/wbi/playurl">https://api.bilibili.com/x/player/wbi/playurl</a> 这个接口的,他需要cookie,bvid和cid,这里给出通过 <a href="https://api.bilibili.com/x/web-interface/wbi/view">https://api.bilibili.com/x/web-interface/wbi/view</a> 获取特定bvid的cid的方法.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#bilibili_api.py</span><br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">from</span> bilibili_cookie <span class="hljs-keyword">import</span> ClearTerminal, LoadCookie, SaveCookie, SignIn<br><br>headers = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&quot;</span>,<br>    <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;https://www.bilibili.com&quot;</span>,<br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_video_cid</span>(<span class="hljs-params">video_id</span>):<br>    url = <span class="hljs-string">&quot;https://api.bilibili.com/x/web-interface/wbi/view?bvid=&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(video_id)<br><br>    response = requests.get(url, headers=headers, timeout=<span class="hljs-number">10</span>)<br>    <span class="hljs-comment"># print(response.text)</span><br>    json_data = json.loads(response.text)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;data&quot;</span> <span class="hljs-keyword">in</span> json_data:<br>        <span class="hljs-comment"># print(f&quot;获取视频CID成功:&#123;json_data[&#x27;data&#x27;][&#x27;cid&#x27;]&#125;&quot;)</span><br>        <span class="hljs-keyword">return</span> json_data[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;cid&quot;</span>]<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_video_m4s_url</span>(<span class="hljs-params">video_id</span>) -&gt; <span class="hljs-built_in">tuple</span>[<span class="hljs-built_in">str</span>, <span class="hljs-built_in">int</span>]:<br>    url = <span class="hljs-string">&quot;https://api.bilibili.com/x/player/wbi/playurl&quot;</span><br>    response = requests.get(<br>        url,<br>        cookies=LoadCookie(),<br>        params=&#123;<br>            <span class="hljs-string">&quot;bvid&quot;</span>: video_id,<br>            <span class="hljs-string">&quot;cid&quot;</span>: get_video_cid(video_id),<br>        &#125;,<br>        timeout=<span class="hljs-number">10</span>,<br>        headers=headers,<br>    )<br>    <span class="hljs-comment"># print(response.text)</span><br>    <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;video_info.json&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(response.text)<br>        <span class="hljs-keyword">return</span> (<br>            response.json()[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;durl&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;url&quot;</span>],<br>            response.json()[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;durl&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;length&quot;</span>],<br>        )<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;&quot;</span>, -<span class="hljs-number">1</span>)<br><br></code></pre></td></tr></table></figure><p><a href="https://api.bilibili.com/x/player/wbi/playurl">https://api.bilibili.com/x/player/wbi/playurl</a> 接口的返回样例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://www.bilibili.com/video/BV1VeHFeTEjo/&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;SteamDeck 搭载 Linux，凭什么可以玩 Win 游戏？&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;site&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Bilibili&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;streams&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;dash-flv480-HEVC&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;container&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;mp4&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;quality&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;清晰 480P hev1.1.6.L120.90&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;src&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estghw.bilivideo.com/upgcxcode/38/84/25675958438/25675958438_x1-1-100110.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;nbs=1&amp;uipk=5&amp;deadline=1753467133&amp;gen=playurlv3&amp;os=upos&amp;oi=2742926265&amp;platform=pc&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;og=hw&amp;upsig=765a7e24982aac58777fb2c0d097663d&amp;uparams=e,nbs,uipk,deadline,gen,os,oi,platform,trid,mid,og&amp;bvc=vod&amp;nettype=0&amp;bw=84669&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;build=0&amp;dl=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estghw.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-30280.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;platform=pc&amp;deadline=1753467133&amp;oi=2742926265&amp;nbs=1&amp;os=upos&amp;og=hw&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;uipk=5&amp;gen=playurlv3&amp;upsig=2fc5ca14b4f5bb3d6bd9c8774536ccfd&amp;uparams=e,platform,deadline,oi,nbs,os,og,trid,mid,uipk,gen&amp;bvc=vod&amp;nettype=0&amp;bw=119321&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;build=0&amp;dl=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">25957804</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;dash-flv480-AVC&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;container&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;mp4&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;quality&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;清晰 480P avc1.64001F&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;src&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estgoss.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-100047.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;platform=pc&amp;mid=0&amp;deadline=1753467133&amp;oi=2742926265&amp;os=upos&amp;og=cos&amp;nbs=1&amp;uipk=5&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;gen=playurlv3&amp;upsig=ba990f82f1cba82b96ec1eae8c8d4d8a&amp;uparams=e,platform,mid,deadline,oi,os,og,nbs,uipk,trid,gen&amp;bvc=vod&amp;nettype=0&amp;bw=63045&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;build=0&amp;dl=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estghw.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-30280.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;platform=pc&amp;deadline=1753467133&amp;oi=2742926265&amp;nbs=1&amp;os=upos&amp;og=hw&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;uipk=5&amp;gen=playurlv3&amp;upsig=2fc5ca14b4f5bb3d6bd9c8774536ccfd&amp;uparams=e,platform,deadline,oi,nbs,os,og,trid,mid,uipk,gen&amp;bvc=vod&amp;nettype=0&amp;bw=119321&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;build=0&amp;dl=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">23206157</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;dash-flv480-AV1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;container&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;mp4&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;quality&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;清晰 480P av01.0.00M.10.0.110.01.01.01.0&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;src&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estgcos.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-100023.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;platform=pc&amp;gen=playurlv3&amp;os=upos&amp;oi=2742926265&amp;nbs=1&amp;uipk=5&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;deadline=1753467133&amp;og=cos&amp;upsig=2c38d2d5268e1ac773e0b4a269dc59f9&amp;uparams=e,platform,gen,os,oi,nbs,uipk,trid,mid,deadline,og&amp;bvc=vod&amp;nettype=0&amp;bw=84901&amp;buvid=&amp;build=0&amp;dl=0&amp;f=u_0_0&amp;agrr=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estghw.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-30280.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;platform=pc&amp;deadline=1753467133&amp;oi=2742926265&amp;nbs=1&amp;os=upos&amp;og=hw&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;uipk=5&amp;gen=playurlv3&amp;upsig=2fc5ca14b4f5bb3d6bd9c8774536ccfd&amp;uparams=e,platform,deadline,oi,nbs,os,og,trid,mid,uipk,gen&amp;bvc=vod&amp;nettype=0&amp;bw=119321&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;build=0&amp;dl=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">25987281</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;dash-flv360-HEVC&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;container&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;mp4&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;quality&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;流畅 360P hev1.1.6.L120.90&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;src&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estghw.bilivideo.com/upgcxcode/38/84/25675958438/25675958438_x1-1-100109.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;uipk=5&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;oi=2742926265&amp;nbs=1&amp;og=hw&amp;platform=pc&amp;deadline=1753467133&amp;gen=playurlv3&amp;os=upos&amp;upsig=74ef2c8cf710cd4d199b62f01cef4571&amp;uparams=e,uipk,trid,mid,oi,nbs,og,platform,deadline,gen,os&amp;bvc=vod&amp;nettype=0&amp;bw=60307&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;build=0&amp;dl=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estgcos.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-30216.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;oi=2742926265&amp;gen=playurlv3&amp;og=hw&amp;nbs=1&amp;os=upos&amp;uipk=5&amp;platform=pc&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;deadline=1753467133&amp;upsig=995037c504f44a774d85f361465f8cad&amp;uparams=e,oi,gen,og,nbs,os,uipk,platform,trid,mid,deadline&amp;bvc=vod&amp;nettype=0&amp;bw=37769&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;build=0&amp;dl=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">12480383</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;dash-flv360-AVC&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;container&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;mp4&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;quality&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;流畅 360P avc1.64001E&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;src&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estghw.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-100046.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;uipk=5&amp;platform=pc&amp;gen=playurlv3&amp;os=upos&amp;og=hw&amp;deadline=1753467133&amp;oi=2742926265&amp;nbs=1&amp;upsig=997e76214828b4d0c80dcf859b8adc26&amp;uparams=e,trid,mid,uipk,platform,gen,os,og,deadline,oi,nbs&amp;bvc=vod&amp;nettype=0&amp;bw=38610&amp;build=0&amp;dl=0&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estgcos.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-30216.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;oi=2742926265&amp;gen=playurlv3&amp;og=hw&amp;nbs=1&amp;os=upos&amp;uipk=5&amp;platform=pc&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;deadline=1753467133&amp;upsig=995037c504f44a774d85f361465f8cad&amp;uparams=e,oi,gen,og,nbs,os,uipk,platform,trid,mid,deadline&amp;bvc=vod&amp;nettype=0&amp;bw=37769&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;build=0&amp;dl=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">9719350</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;dash-flv360-AV1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;container&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;mp4&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;quality&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;流畅 360P av01.0.00M.10.0.110.01.01.01.0&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;src&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estgcos.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-100022.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;oi=2742926265&amp;platform=pc&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;os=upos&amp;og=cos&amp;nbs=1&amp;uipk=5&amp;mid=0&amp;deadline=1753467133&amp;gen=playurlv3&amp;upsig=5f9f63912cfa399d1ced1a9b0fca16b3&amp;uparams=e,oi,platform,trid,os,og,nbs,uipk,mid,deadline,gen&amp;bvc=vod&amp;nettype=0&amp;bw=58407&amp;buvid=&amp;build=0&amp;dl=0&amp;f=u_0_0&amp;agrr=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-punctuation">[</span><br>                    <span class="hljs-string">&quot;https://upos-sz-estgcos.bilivideo.com/upgcxcode/38/84/25675958438/25675958438-1-30216.m4s?e=ig8euxZM2rNcNbdlhoNvNC8BqJIzNbfqXBvEqxTEto8BTrNvN0GvT90W5JZMkX_YN0MvXg8gNEV4NC8xNEV4N03eN0B5tZlqNxTEto8BTrNvNeZVuJ10Kj_g2UB02J0mN0B5tZlqNCNEto8BTrNvNC7MTX502C8f2jmMQJ6mqF2fka1mqx6gqj0eN0B599M=&amp;oi=2742926265&amp;gen=playurlv3&amp;og=hw&amp;nbs=1&amp;os=upos&amp;uipk=5&amp;platform=pc&amp;trid=f032519d702d4c178b6003af2b3f83eu&amp;mid=0&amp;deadline=1753467133&amp;upsig=995037c504f44a774d85f361465f8cad&amp;uparams=e,oi,gen,og,nbs,os,uipk,platform,trid,mid,deadline&amp;bvc=vod&amp;nettype=0&amp;bw=37769&amp;f=u_0_0&amp;agrr=0&amp;buvid=&amp;build=0&amp;dl=0&amp;orderid=0,3&quot;</span><br>                <span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">12238553</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;extra&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;referer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://www.bilibili.com/video/BV1VeHFeTEjo/&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;ua&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>其中streams里面个体的src[0]是视频,src[1]是音频.</p><h3 id="HTTP范围请求获取需要的帧"><a href="#HTTP范围请求获取需要的帧" class="headerlink" title="HTTP范围请求获取需要的帧"></a>HTTP范围请求获取需要的帧</h3><p>采用使用HTTP范围请求,每次都下载特定的一部分,再进行解析出i帧,保存成图片,最后拼接在一起:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> uuid<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><br><span class="hljs-keyword">from</span> bilibili_cookie <span class="hljs-keyword">import</span> ClearTerminal, LoadCookie, SaveCookie, SignIn<br><span class="hljs-keyword">from</span> bilibili_api <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> image_pro <span class="hljs-keyword">import</span> create_collage<br><span class="hljs-keyword">from</span> video_stream_pro <span class="hljs-keyword">import</span> download_by_video_info, parse_video_header<br><br>headers = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&quot;</span>,<br>    <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;https://www.bilibili.com&quot;</span>,<br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download_with_range</span>(<span class="hljs-params">url, start_byte=<span class="hljs-literal">None</span>, end_byte=<span class="hljs-literal">None</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    使用HTTP范围请求下载文件的一部分</span><br><span class="hljs-string"></span><br><span class="hljs-string">    :param url: 文件URL</span><br><span class="hljs-string">    :param start_byte: 起始字节位置(包含)</span><br><span class="hljs-string">    :param end_byte: 结束字节位置(包含)</span><br><span class="hljs-string">    :param headers: 额外的请求头</span><br><span class="hljs-string">    :return: 响应对象</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 设置Range头</span><br>    <span class="hljs-keyword">if</span> start_byte <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> end_byte <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        headers[<span class="hljs-string">&quot;Range&quot;</span>] = <span class="hljs-string">f&quot;bytes=<span class="hljs-subst">&#123;start_byte&#125;</span>-<span class="hljs-subst">&#123;end_byte&#125;</span>&quot;</span><br>    <span class="hljs-keyword">elif</span> start_byte <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        headers[<span class="hljs-string">&quot;Range&quot;</span>] = <span class="hljs-string">f&quot;bytes=<span class="hljs-subst">&#123;start_byte&#125;</span>-&quot;</span><br>    <span class="hljs-keyword">elif</span> end_byte <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        headers[<span class="hljs-string">&quot;Range&quot;</span>] = <span class="hljs-string">f&quot;bytes=0-<span class="hljs-subst">&#123;end_byte&#125;</span>&quot;</span><br><br>    response = requests.get(url, headers=headers, stream=<span class="hljs-literal">True</span>, cookies=LoadCookie())<br><br>    <span class="hljs-comment"># 检查服务器是否支持范围请求(返回206 Partial Content)</span><br>    <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">206</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;服务器支持范围请求&quot;</span>)<br>    <span class="hljs-keyword">elif</span> response.status_code == <span class="hljs-number">200</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;服务器不支持范围请求，返回了整个文件&quot;</span>)<br><br>    <span class="hljs-keyword">return</span> response<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    ClearTerminal()<br>    cookies = LoadCookie()<br>    <span class="hljs-keyword">if</span> cookies:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;检测到已登录状态&quot;</span>)<br>        url, lentgth = get_video_m4s_url(<span class="hljs-string">&quot;BV1ox4y1q7bP&quot;</span>)<br>        response = download_with_range(url, <span class="hljs-number">0</span>, <span class="hljs-number">1000000</span>)  <span class="hljs-comment"># 下载前1MB数据</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;video_part.m4s&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(response.content)<br>        <span class="hljs-comment"># 解析视频数据,多退少补</span><br>        video_info = parse_video_header(response.content, url)<br>        <span class="hljs-comment"># 根据视频信息切片下载16个i帧</span><br>        file_list = download_by_video_info(video_info)<br>        <span class="hljs-comment"># 创建视频缩略图拼贴</span><br>        create_collage(file_list)<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;未检测到登录状态,请登录&quot;</span>)<br>        SignIn()<br><br></code></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="/image/b%E7%AB%99%E8%A7%86%E9%A2%91%E7%94%9F%E6%88%90%E9%A2%84%E8%A7%88%E5%9B%BE/1753547952491.jpg" alt="https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;BV1ox4y1q7bP&#x2F;" title="网络上视频是如何显示一帧的——浅谈H.264编码原理"></p><h2 id="直接通过api获取缩略图和其他信息"><a href="#直接通过api获取缩略图和其他信息" class="headerlink" title="直接通过api获取缩略图和其他信息"></a>直接通过api获取缩略图和其他信息</h2><p>通过浏览器F12观察,发现无需cookie就可以获取B站的缩略图,通过向此api:<a href="https://api.bilibili.com/x/player/videoshot,%E4%BC%A0%E9%80%92bv_id%E5%8F%82%E6%95%B0%E5%8D%B3%E5%8F%AF,%E6%9C%80%E5%90%8E%E8%BF%94%E5%9B%9E%E7%9A%84json%E6%A0%BC%E5%BC%8F">https://api.bilibili.com/x/player/videoshot,传递bv_id参数即可,最后返回的json格式</a>:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ttl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;pvdata&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431.bin&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;img_x_len&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;img_y_len&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;img_x_size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">160</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;img_y_size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;image&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-1.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-2.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-3.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-4.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-5.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-6.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-7.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-8.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-9.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-10.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-11.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-12.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-13.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-14.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-15.jpg&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;//i0.hdslb.com/bfs/videoshot/3990431-16.jpg&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;index&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;video_shots&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;indexs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>其中data的image列表即为我们要的缩略图图片,但是他默认是10*10的,所以当视频比较短的时候,拼接成的图片得人工裁切:</p><p><img src="/image/b%E7%AB%99%E8%A7%86%E9%A2%91%E7%94%9F%E6%88%90%E9%A2%84%E8%A7%88%E5%9B%BE/1753548545658.jpg" alt="BV1ghbSz7EG7" title="可以看到,都是黑边"></p><p><img src="/image/b%E7%AB%99%E8%A7%86%E9%A2%91%E7%94%9F%E6%88%90%E9%A2%84%E8%A7%88%E5%9B%BE/1753548570887.jpg" alt="利用opencv裁切后结果"></p><p>这里给出demo代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#demo.py</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> concurrent.futures <span class="hljs-keyword">import</span> ThreadPoolExecutor, as_completed<br><span class="hljs-keyword">import</span> time<br><br>headers = &#123;<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&quot;</span>,<br>    <span class="hljs-string">&quot;referer&quot;</span>: <span class="hljs-string">&quot;https://www.bilibili.com&quot;</span>,<br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download_image</span>(<span class="hljs-params">args</span>):<br>    i, url = args<br>    url = <span class="hljs-string">&quot;https:&quot;</span> + url <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> url.startswith(<span class="hljs-string">&quot;https:&quot;</span>) <span class="hljs-keyword">else</span> url<br>    <span class="hljs-keyword">try</span>:<br>        img_data = requests.get(url, headers=headers).content<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;image_<span class="hljs-subst">&#123;i&#125;</span>.jpg&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> img_file:<br>            img_file.write(img_data)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;图片 <span class="hljs-subst">&#123;i&#125;</span> 下载成功&quot;</span><br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;图片 <span class="hljs-subst">&#123;i&#125;</span> 下载失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br><br><span class="hljs-comment"># BV1ghbSz7EG7</span><br><span class="hljs-comment"># https://www.bilibili.com/video/BV1ox4y1q7bP</span><br>url = <span class="hljs-string">&quot;https://api.bilibili.com/x/player/videoshot?bvid=BV1ghbSz7EG7&quot;</span><br>response = requests.get(url, headers=headers)<br>data = response.json()<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data.json&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">import</span> json<br><br>    json.dump(data, f, ensure_ascii=<span class="hljs-literal">False</span>, indent=<span class="hljs-number">4</span>)<br><br>image_urls = data.get(<span class="hljs-string">&quot;data&quot;</span>, &#123;&#125;).get(<span class="hljs-string">&quot;image&quot;</span>, [])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;需要下载 <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(image_urls)&#125;</span> 张图片&quot;</span>)<br><br><span class="hljs-comment"># 使用线程池进行并发下载</span><br>start_time = time.time()<br><span class="hljs-keyword">with</span> ThreadPoolExecutor(max_workers=<span class="hljs-built_in">min</span>(<span class="hljs-number">10</span>, <span class="hljs-built_in">len</span>(image_urls))) <span class="hljs-keyword">as</span> executor:<br>    futures = [<br>        executor.submit(download_image, (i, url)) <span class="hljs-keyword">for</span> i, url <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(image_urls)<br>    ]<br>    <span class="hljs-keyword">for</span> future <span class="hljs-keyword">in</span> as_completed(futures):<br>        <span class="hljs-built_in">print</span>(future.result())<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;下载完成，耗时: <span class="hljs-subst">&#123;time.time() - start_time:<span class="hljs-number">.2</span>f&#125;</span> 秒&quot;</span>)<br><br><br><span class="hljs-comment"># opencv拼接图片到一起,然后删除底部的黑底</span><br><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>images = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(image_urls)):<br>    img = cv2.imread(<span class="hljs-string">f&quot;image_<span class="hljs-subst">&#123;i&#125;</span>.jpg&quot;</span>)<br>    <span class="hljs-keyword">if</span> img <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        images.append(img)<br><br><span class="hljs-keyword">if</span> images:<br>    <span class="hljs-comment"># 拼接图片</span><br>    stitched = np.concatenate(images, axis=<span class="hljs-number">0</span>)<br>    <span class="hljs-comment"># 删除底部黑边</span><br>    stitched = stitched[stitched[:, :, <span class="hljs-number">0</span>].<span class="hljs-built_in">any</span>(axis=<span class="hljs-number">1</span>)]<br>    cv2.imwrite(<span class="hljs-string">&quot;stitched.jpg&quot;</span>, stitched)<br><br><span class="hljs-built_in">print</span>(data)<br><br></code></pre></td></tr></table></figure><p>这种方法的好处是可以解析特别长的视频,而且对本地没有编解码需求.坏处是拼接过后的图片可能大小过大.</p><h2 id="最后效果"><a href="#最后效果" class="headerlink" title="最后效果"></a>最后效果</h2><p>最后选择的方案三,加了点其他解析,最终部署到BOT上的效果如下图.代码见<a href="https://github.com/JKWTCN/bot/blob/main/application/bilibili_parsing_application.py">bot&#x2F;application&#x2F;bilibili_parsing_application.py at main · JKWTCN&#x2F;bot</a>.</p><p><img src="/image/b%E7%AB%99%E8%A7%86%E9%A2%91%E7%94%9F%E6%88%90%E9%A2%84%E8%A7%88%E5%9B%BE/1753548896541.png" alt="QQ群聊BOT解析B站链接"></p><p><img src="/image/b%E7%AB%99%E8%A7%86%E9%A2%91%E7%94%9F%E6%88%90%E9%A2%84%E8%A7%88%E5%9B%BE/1753548928017.jpg" alt="最后生成预览图"></p>]]></content>
    
    
    
    <tags>
      
      <tag>B站视频解析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>alt码</title>
    <link href="/2025/07/24/alt%E7%A0%81/"/>
    <url>/2025/07/24/alt%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p>一个判断当前是UTF-8还是GBK环境的简单方法,切换到英文输入法,然后按住alt+34121,小键盘输入数字.</p><p>如果是匢说明是GBK环境.</p><p>如果是蕉说明是UTF-8环境.</p><p>如果是I,说明你忘记切换输入法了.</p><p><img src="/image/alt%E7%A0%81/1753368070449.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>杂谈</tag>
      
      <tag>备忘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>奇妙的正反馈</title>
    <link href="/2025/07/23/%E5%A5%87%E5%A6%99%E7%9A%84%E6%AD%A3%E5%8F%8D%E9%A6%88/"/>
    <url>/2025/07/23/%E5%A5%87%E5%A6%99%E7%9A%84%E6%AD%A3%E5%8F%8D%E9%A6%88/</url>
    
    <content type="html"><![CDATA[<p>今天晚上继续开发拼好图的时候,遇到了一个不难解决的bug,但是带来了一些哲学思考.就是当你移动中间图片的时候,先上移会把下面的图片整体移动,然后缓慢下移下面的图片也会一起整体下移,当你快速下移的时候,会把最下面的图片给甩出去:</p><p><img src="/image/%E5%A5%87%E5%A6%99%E7%9A%84%E6%AD%A3%E5%8F%8D%E9%A6%88/1753285276743.png" alt="中间图片上移是正常的"><img src="/image/%E5%A5%87%E5%A6%99%E7%9A%84%E6%AD%A3%E5%8F%8D%E9%A6%88/1753285301368.png" alt="中间图片上移再缓慢的下移也是正常的"><img src="/image/%E5%A5%87%E5%A6%99%E7%9A%84%E6%AD%A3%E5%8F%8D%E9%A6%88/1753285330239.png" alt="中间图片上移再快速的下移,就会把最下面的一张图片给甩出去">至于原因嘛,是因为在Qt的Graphics View框架中，当调用 QGraphicsItem::setPos() 时，如果该item设置了 ItemSendsGeometryChanges 标志，Qt会自动调用 itemChange() 函数。所以当你移动速度非常快的时候,采样更多,每次调用 QGraphicsItem::setPos()触发的itemChange()更多,就会偏离更多.这是一个正反馈,反馈信息影响系统再输出的结果，更加增大了受控量的实际值和期望值的偏差，从而使系统趋向于更加不稳定状态。解决方法就是在QGraphicsItem::setPos()前临时禁用一下子ItemSendsGeometryChanges 标志,在调用完后再打开,这样子就可以打破它的正反馈,代码如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 整体移动currentBottomY以下的</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">MovablePixmapItem::moveElementsBelow</span><span class="hljs-params">(qreal currentBottomY, qreal deltaY)</span> </span>&#123;<br><br>    <span class="hljs-comment">// 遍历场景中的所有项目，找到位于当前元素下方的元素</span><br>    QList &lt; QGraphicsItem * &gt; allItems = <span class="hljs-keyword">this</span> -&gt; <span class="hljs-built_in">scene</span>() -&gt; <span class="hljs-built_in">items</span>();<br><br>    <span class="hljs-keyword">for</span> (QGraphicsItem * item: allItems) &#123;<br>        <span class="hljs-comment">// 处理SplicingLine类型的项目</span><br>        SplicingLine * splicingLine = <span class="hljs-keyword">dynamic_cast</span> &lt; SplicingLine * &gt; (item);<br>        <span class="hljs-keyword">if</span> (splicingLine) &#123;<br>            <span class="hljs-comment">// 检查拼接线是否位于当前元素的下方</span><br>            qreal lineY = splicingLine -&gt; <span class="hljs-built_in">line</span>().<span class="hljs-built_in">y1</span>();<br>            <span class="hljs-keyword">if</span> (lineY &gt; currentBottomY) &#123;<br>                <span class="hljs-comment">// 移动拼接线</span><br>                QLineF currentLine = splicingLine -&gt; <span class="hljs-built_in">line</span>();<br>                currentLine.<span class="hljs-built_in">setP1</span>(<span class="hljs-built_in">QPointF</span>(currentLine.<span class="hljs-built_in">x1</span>(), currentLine.<span class="hljs-built_in">y1</span>() + deltaY));<br>                currentLine.<span class="hljs-built_in">setP2</span>(<span class="hljs-built_in">QPointF</span>(currentLine.<span class="hljs-built_in">x2</span>(), currentLine.<span class="hljs-built_in">y2</span>() + deltaY));<br>                splicingLine -&gt; <span class="hljs-built_in">setLine</span>(currentLine);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// 处理MovablePixmapItem类型且不是当前元素本身的项目</span><br>        MovablePixmapItem * pixmapItem = <span class="hljs-keyword">dynamic_cast</span> &lt; MovablePixmapItem * &gt; (item);<br>        <span class="hljs-keyword">if</span> (pixmapItem &amp;&amp; pixmapItem != <span class="hljs-keyword">this</span>) &#123;<br>            <span class="hljs-comment">// 检查该元素是否位于当前元素的下方</span><br>            qreal itemTopY = pixmapItem -&gt; <span class="hljs-built_in">sceneBoundingRect</span>().<span class="hljs-built_in">top</span>();<br>            <span class="hljs-keyword">if</span> (itemTopY &gt; currentBottomY) &#123;<br>                <span class="hljs-comment">// 移动该元素（作为整体移动）</span><br>                QPointF itemPos = pixmapItem -&gt; <span class="hljs-built_in">pos</span>();<br>                itemPos.<span class="hljs-built_in">setY</span>(itemPos.<span class="hljs-built_in">y</span>() + deltaY);<br>                <span class="hljs-comment">//临时禁用</span><br>                pixmapItem -&gt; <span class="hljs-built_in">setFlag</span>(QGraphicsItem::ItemSendsGeometryChanges, <span class="hljs-literal">false</span>);<br>                pixmapItem -&gt; <span class="hljs-built_in">setPos</span>(itemPos);<br>                <span class="hljs-comment">//取消禁用</span><br>                pixmapItem -&gt; <span class="hljs-built_in">setFlag</span>(QGraphicsItem::ItemSendsGeometryChanges, <span class="hljs-literal">true</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>顺便提一嘴,最开始写这个应用的时候,有两个路线,分别是图动和拼接线动,   其中图动比较直观,所见即所得.但是有8种情况,而且还要实现整体移动,编程复杂一点;线动只有4种情况,而且不能所见即所得,但是编程简单一些.当时没做好调研和思考就选择了图动.</p><p><img src="/image/%E5%A5%87%E5%A6%99%E7%9A%84%E6%AD%A3%E5%8F%8D%E9%A6%88/1753286100387.png" alt="图动和线动的情况"></p>]]></content>
    
    
    
    <tags>
      
      <tag>拼好图</tag>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记录一次有趣的debug</title>
    <link href="/2025/07/22/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%A5%87%E6%80%AA%E7%9A%84debug/"/>
    <url>/2025/07/22/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%A5%87%E6%80%AA%E7%9A%84debug/</url>
    
    <content type="html"><![CDATA[<p>最近上班摸鱼在写一个拼图软件:<a href="https://github.com/JKWTCN/ImageSplicing">JKWTCN&#x2F;ImageSplicing</a>,暂定名字叫拼好图;</p><p>今天晚上发现了一个bug,修复前代码如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span> (rightSplicingLine &amp;&amp; leftSplicingLine) &#123;<br><br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!rightSplicingLine &amp;&amp; leftSplicingLine) &#123;<br>    qreal lineLX = leftSplicingLine -&gt; <span class="hljs-built_in">line</span>().<span class="hljs-built_in">x1</span>();<br>    <span class="hljs-built_in">qDebug</span>() &lt;&lt; <span class="hljs-string">&quot;最右边图片右移&quot;</span> &lt;&lt; rightX &lt;&lt; <span class="hljs-string">&quot;  &quot;</span> &lt;&lt; lineLX &lt;&lt; endl;<br>    <span class="hljs-keyword">if</span> (!(leftX &lt;= lineLX)) &#123;<br>        newPos.<span class="hljs-built_in">setX</span>(oldPos.<span class="hljs-built_in">x</span>());<br>        <span class="hljs-keyword">return</span> newPos;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (rightSplicingLine &amp;&amp; !leftSplicingLine) &#123;<br>    qreal lineRX = rightSplicingLine -&gt; <span class="hljs-built_in">line</span>().<span class="hljs-built_in">x1</span>();<br>    <span class="hljs-built_in">qDebug</span>() &lt;&lt; <span class="hljs-string">&quot;最左边图片右移&quot;</span> &lt;&lt; rightX &lt;&lt; <span class="hljs-string">&quot;  &quot;</span> &lt;&lt; lineRX &lt;&lt; endl;<br>    <span class="hljs-keyword">if</span> (!(rightX &gt;= lineRX)) &#123;<br>        newPos.<span class="hljs-built_in">setX</span>(oldPos.<span class="hljs-built_in">x</span>());<br>        <span class="hljs-keyword">return</span> newPos;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>修复后代码如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span> (rightSplicingLine &amp;&amp; leftSplicingLine) &#123;<br><br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!rightSplicingLine &amp;&amp; leftSplicingLine) &#123;<br>    qreal lineLX = leftSplicingLine -&gt; <span class="hljs-built_in">line</span>().<span class="hljs-built_in">x1</span>();<br>    <span class="hljs-built_in">qDebug</span>() &lt;&lt; <span class="hljs-string">&quot;最右边图片右移&quot;</span> &lt;&lt; rightX &lt;&lt; <span class="hljs-string">&quot;  &quot;</span> &lt;&lt; lineLX &lt;&lt; endl;<br>    <span class="hljs-keyword">if</span> (!(leftX + deltaX &lt;= lineLX)) &#123;<br>        newPos.<span class="hljs-built_in">setX</span>(oldPos.<span class="hljs-built_in">x</span>());<br>        <span class="hljs-keyword">return</span> newPos;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (rightSplicingLine &amp;&amp; !leftSplicingLine) &#123;<br>    qreal lineRX = rightSplicingLine -&gt; <span class="hljs-built_in">line</span>().<span class="hljs-built_in">x1</span>();<br>    <span class="hljs-built_in">qDebug</span>() &lt;&lt; <span class="hljs-string">&quot;最左边图片右移&quot;</span> &lt;&lt; rightX &lt;&lt; <span class="hljs-string">&quot;  &quot;</span> &lt;&lt; lineRX &lt;&lt; endl;<br>    <span class="hljs-keyword">if</span> (!(rightX + deltaX &gt;= lineRX)) &#123;<br>        newPos.<span class="hljs-built_in">setX</span>(oldPos.<span class="hljs-built_in">x</span>());<br>        <span class="hljs-keyword">return</span> newPos;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>原因是我判断移动的时候是把移动之前的值和拼接线判断,而不是移动之后的值,就会造成如果移动的速度非常快,图片实际上可以拽离剪切线非常多,从而产生一个非常明显的白边.</p><p><img src="/image/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%A5%87%E6%80%AA%E7%9A%84debug/1753193101455.gif" alt="可以看到右边的图片拉动快了有明显的脱离"></p><p>修复后效果:</p><p><img src="/image/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%A5%87%E6%80%AA%E7%9A%84debug/1753193414462.gif" alt="现在就不会脱离拼接线了"></p><p>但是在公司我拉拽却没有发现这个bug,想来,原因应该是公司的内存只有8GB,我还开了VSCODE,QT CREATOR和其他软件,本身就有些卡顿了,再加上公司鼠标的DPI不高,所以拉拽的幅度不明显罢了.</p>]]></content>
    
    
    
    <tags>
      
      <tag>拼好图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决QT设置Ctrl+鼠标滚轮缩放 会触发GraphicsView的鼠标滚轮移动</title>
    <link href="/2025/07/21/%E8%A7%A3%E5%86%B3QT%E8%AE%BE%E7%BD%AECtrl-%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%BC%A9%E6%94%BE-%E4%BC%9A%E8%A7%A6%E5%8F%91graphicsView%E7%9A%84%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%A7%BB%E5%8A%A8/"/>
    <url>/2025/07/21/%E8%A7%A3%E5%86%B3QT%E8%AE%BE%E7%BD%AECtrl-%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%BC%A9%E6%94%BE-%E4%BC%9A%E8%A7%A6%E5%8F%91graphicsView%E7%9A%84%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%A7%BB%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<p>最开始用的是重写的滚轮事件wheelEvent的方法,代码如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 重写滚轮事件处理函数</span><br><span class="hljs-comment">// 该函数用于处理滚轮事件，实现缩放功能</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">MainWindow::wheelEvent</span><span class="hljs-params">(QWheelEvent *event)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">// 检查是否按下 Ctrl 键</span><br>    <span class="hljs-keyword">if</span> (QApplication::<span class="hljs-built_in">keyboardModifiers</span>() &amp; Qt::ControlModifier)<br>    &#123;<br>        <span class="hljs-comment">// 获取滚轮滚动角度（通常 1 步 = 120 度）</span><br>        <span class="hljs-type">int</span> delta = event-&gt;<span class="hljs-built_in">angleDelta</span>().<span class="hljs-built_in">y</span>();<br><br>        <span class="hljs-keyword">if</span> (delta &gt; <span class="hljs-number">0</span>)<br>        &#123;<br>            ui-&gt;graphicsView_result-&gt;<span class="hljs-built_in">scale</span>(<span class="hljs-number">1.1</span>, <span class="hljs-number">1.1</span>); <span class="hljs-comment">// 放大10%</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (delta &lt; <span class="hljs-number">0</span>)<br>        &#123;<br>            ui-&gt;graphicsView_result-&gt;<span class="hljs-built_in">scale</span>(<span class="hljs-number">0.9</span>, <span class="hljs-number">0.9</span>); <span class="hljs-comment">// 缩小10%</span><br>        &#125;<br><br>        event-&gt;<span class="hljs-built_in">accept</span>(); <span class="hljs-comment">// 表示事件已处理</span><br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-comment">// 其他情况（如普通滚轮滚动）交给父类处理</span><br>        QWidget::<span class="hljs-built_in">wheelEvent</span>(event);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>此方法会导致先触发鼠标滚轮的滚动,等滚动到了尽头后才触发自定义的放大缩小.效果如图:<br><img src="/image/%E8%A7%A3%E5%86%B3QT%E8%AE%BE%E7%BD%AECtrl-%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%BC%A9%E6%94%BE-%E4%BC%9A%E8%A7%A6%E5%8F%91graphicsView%E7%9A%84%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%A7%BB%E5%8A%A8/1753110867528.gif" alt="可以看到,要滚到底才能实现放大缩小."></p><p>后来改用事件过滤器方案,代码如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">MainWindow::eventFilter</span><span class="hljs-params">(QObject *obj, QEvent *event)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (event-&gt;<span class="hljs-built_in">type</span>() == QEvent::GraphicsSceneWheel)<br>    &#123;<br>        ui-&gt;graphicsView_result-&gt;<span class="hljs-built_in">setTransformationAnchor</span>(QGraphicsView::AnchorUnderMouse);<br>        <span class="hljs-type">double</span> scaleFactor = <span class="hljs-number">1.15</span>;<br>        <span class="hljs-type">bool</span> ok = QApplication::<span class="hljs-built_in">keyboardModifiers</span>() &amp; Qt::ControlModifier;<br>        <span class="hljs-keyword">if</span> (ok)<br>        &#123;<br>            QGraphicsSceneWheelEvent *scrollevent = <span class="hljs-built_in">static_cast</span>&lt;QGraphicsSceneWheelEvent *&gt;(event);<br>            <span class="hljs-keyword">if</span> (scrollevent-&gt;<span class="hljs-built_in">delta</span>() &gt; <span class="hljs-number">0</span>)<br>            &#123;<br>                ui-&gt;graphicsView_result-&gt;<span class="hljs-built_in">scale</span>(scaleFactor, scaleFactor);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                ui-&gt;graphicsView_result-&gt;<span class="hljs-built_in">scale</span>(<span class="hljs-number">1</span> / scaleFactor, <span class="hljs-number">1</span> / scaleFactor);<br>            &#125;<br>        &#125;<br><br>        event-&gt;<span class="hljs-built_in">accept</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>在创建场景的下面添加注册事件过滤器即可:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 创建场景并安装事件过滤器</span><br>QGraphicsScene *scene = <span class="hljs-keyword">new</span> <span class="hljs-built_in">QGraphicsScene</span>(<span class="hljs-keyword">this</span>);<br>ui-&gt;graphicsView_result-&gt;<span class="hljs-built_in">setScene</span>(scene);<br>scene-&gt;<span class="hljs-built_in">installEventFilter</span>(<span class="hljs-keyword">this</span>);<br></code></pre></td></tr></table></figure><p>这样子就可以实现ctrl+鼠标滚轮实现QGraohicsScene放大缩小,而不是优先触发滚动事件了,效果如图:<br><img src="/image/%E8%A7%A3%E5%86%B3QT%E8%AE%BE%E7%BD%AECtrl-%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%BC%A9%E6%94%BE-%E4%BC%9A%E8%A7%A6%E5%8F%91graphicsView%E7%9A%84%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE%E7%A7%BB%E5%8A%A8/1753110605408.gif" alt="可以看到,不需要滚到底就可以实现放大缩小了."></p>]]></content>
    
    
    
    <tags>
      
      <tag>拼好图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ai筛选NSFW图片</title>
    <link href="/2025/07/20/ai%E7%AD%9B%E9%80%89NSFW%E5%9B%BE%E7%89%87/"/>
    <url>/2025/07/20/ai%E7%AD%9B%E9%80%89NSFW%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<p>刷梗图的时候，主要是看到有意思的存，中间的滑动和拼接流程太影响效率了，于是写了个爬虫把我经常逛的所有群的图片都下载下来，但是里面有一些NSFW内容，于是打算用ai剔除一下子后导入自己的图片查看分类器中。由于可能是NSFW内容，所以肯定用不了云端AI的，于是ollma部署了一个本地ai：gemma3:12b。</p><p><img src="/image/ai%E7%AD%9B%E9%80%89NSFW%E5%9B%BE%E7%89%87/1753001627352.png" alt="4060笔记本的占用"></p><p><img src="/image/ai%E7%AD%9B%E9%80%89NSFW%E5%9B%BE%E7%89%87/1753001645651.png" alt="4060笔记本的占用"></p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> logging<br><br>logging.basicConfig(<br>    level=logging.INFO,  <span class="hljs-comment"># 设置日志级别</span><br>    <span class="hljs-built_in">format</span>=<span class="hljs-string">&quot;%(asctime)s - %(name)s - %(levelname)s - %(message)s&quot;</span>,  <span class="hljs-comment"># 定义日志格式</span><br>    datefmt=<span class="hljs-string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>,  <span class="hljs-comment"># 定义时间格式</span><br>)<br><br>sourcePath = <span class="hljs-string">&quot;&quot;</span><br>NsfwPath = <span class="hljs-string">&quot;&quot;</span><br>AfterPath = <span class="hljs-string">&quot;&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">image_to_base64</span>(<span class="hljs-params">image_path</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;将图片转换为base64编码字符串&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(image_path, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> file:<br>        <span class="hljs-comment"># 读取文件内容并转换为Base64编码</span><br>        base64_encoded_data = base64.b64encode(file.read())<br>        <span class="hljs-comment"># 在Python 3中,b64encode返回的是bytes类型,需要解码为字符串</span><br>        base64_encoded_str = base64_encoded_data.decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br>    <span class="hljs-keyword">return</span> base64_encoded_str<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">describe_image</span>(<span class="hljs-params">image_path, prompt, ollama_url=<span class="hljs-string">&quot;http://localhost:11434&quot;</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    使用Ollama的Gemma模型描述图片</span><br><span class="hljs-string"></span><br><span class="hljs-string">    参数:</span><br><span class="hljs-string">        image_path: 图片文件路径</span><br><span class="hljs-string">        prompt: 描述提示</span><br><span class="hljs-string">        ollama_url: Ollama服务地址,默认为本地11434端口</span><br><span class="hljs-string"></span><br><span class="hljs-string">    参数:</span><br><span class="hljs-string">        image_path: 图片文件路径</span><br><span class="hljs-string">        ollama_url: Ollama服务地址,默认为本地11434端口</span><br><span class="hljs-string"></span><br><span class="hljs-string">    返回:</span><br><span class="hljs-string">        模型生成的图片描述</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 将图片转换为base64</span><br>    image_base64 = image_to_base64(image_path)<br>    <span class="hljs-comment"># 准备请求数据</span><br>    data = &#123;<br>        <span class="hljs-string">&quot;model&quot;</span>: <span class="hljs-string">&quot;gemma3:12b&quot;</span>,<br>        <span class="hljs-string">&quot;prompt&quot;</span>: prompt,<br>        <span class="hljs-string">&quot;images&quot;</span>: [image_base64],<br>        <span class="hljs-string">&quot;stream&quot;</span>: <span class="hljs-literal">False</span>,<br>    &#125;<br><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 发送请求到Ollama API</span><br>        response = requests.post(<br>            <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;ollama_url&#125;</span>/api/generate&quot;</span>,<br>            json=data,<br>            headers=&#123;<span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/json&quot;</span>&#125;,<br>            timeout=<span class="hljs-number">300</span>,  <span class="hljs-comment"># 300秒超时</span><br>        )<br>        response.raise_for_status()<br><br>        <span class="hljs-comment"># 解析响应</span><br>        result = response.json()<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>, result.get(<span class="hljs-string">&quot;response&quot;</span>)<br><br>    <span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;请求Ollama API时出错: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>, <span class="hljs-string">f&quot;请求Ollama API时出错: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> os.listdir(sourcePath):<br>        image_path = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;sourcePath&#125;</span>/<span class="hljs-subst">&#123;i&#125;</span>&quot;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isfile(image_path):<br>            <span class="hljs-keyword">continue</span><br>        logging.info(<span class="hljs-string">f&quot;正在处理图片: <span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br>        success, result = describe_image(<br>            image_path,<br>            <span class="hljs-string">&quot;请我帮我判断这张图片是否为NSFW的图片,是只用回答是，否只用回答否，谢谢。&quot;</span>,<br>        )<br>        <span class="hljs-keyword">if</span> success:<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;是&quot;</span> <span class="hljs-keyword">in</span> result:<br>                logging.info(<span class="hljs-string">f&quot;回答:<span class="hljs-subst">&#123;result&#125;</span>, <span class="hljs-subst">&#123;i&#125;</span>-&gt;<span class="hljs-subst">&#123;NsfwPath&#125;</span>;&quot;</span>)<br>                os.rename(image_path, <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;NsfwPath&#125;</span>/<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                logging.info(<span class="hljs-string">f&quot;回答:<span class="hljs-subst">&#123;result&#125;</span>, <span class="hljs-subst">&#123;i&#125;</span>-&gt;<span class="hljs-subst">&#123;AfterPath&#125;</span>;&quot;</span>)<br>                os.rename(image_path, <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;AfterPath&#125;</span>/<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            logging.error(<span class="hljs-string">f&quot;处理图片 <span class="hljs-subst">&#123;i&#125;</span> 时出错: <span class="hljs-subst">&#123;result&#125;</span>;&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>在我的4060笔记本上大概6秒能判断一张图片。</p><p><img src="/image/ai%E7%AD%9B%E9%80%89NSFW%E5%9B%BE%E7%89%87/1753001762228.png" alt="运行中效果"></p><p>但是因为只有12b的模型，只能过滤一些非常NSFW的，还是需要人工介入，不过过滤一些非常NSFW的对我来说已经够了。</p><p><img src="/image/ai%E7%AD%9B%E9%80%89NSFW%E5%9B%BE%E7%89%87/1753001866733.png" alt="比如这张图片会被判断成NSFW"></p>]]></content>
    
    
    
    <tags>
      
      <tag>梗图更新</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo无法显示图片，访问图片链接显示Cannot GET /image/xxx/xxx.png</title>
    <link href="/2025/07/20/hexo%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/"/>
    <url>/2025/07/20/hexo%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<p><strong>解决方案:把_post目录下的image文件夹整个复制到public里面。</strong></p><p>由于我是直接用vscode复制粘贴图片编辑md的。</p><p>访问图片会显示：</p><p><img src="/image/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/1752977198946.png"></p><p>而本地预览是正常的：</p><p><img src="/image/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/1752977215009.png"></p><p>访问进去发现图片链接是：</p><p><img src="/image/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/1752977248357.png"></p><p>解决方案是把_post目录下的image文件夹整个复制到public里面。</p><p>再刷新，就可以显示图片了：</p><p><img src="/image/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/07/20/hello-world/"/>
    <url>/2025/07/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
